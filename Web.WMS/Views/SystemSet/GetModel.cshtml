@using Web.WMS.Common;
@model BILWeb.PickRule.T_PickRuleInfo
@{

    Layout = "~/Views/Shared/_Layout.cshtml";
    var strMsg = (string)ViewData["strMsg"];
}
@switch (Model.RuleType.ToString())
{
    case "1":
        ViewBag.Title = "生单规则";
        break;
    case "2":
        ViewBag.Title = "拣货规则";
        break;
    case "3":
        ViewBag.Title = "分单规则";
        break;
    case "5":
        ViewBag.Title = "上架规则";
        break;
    case "6":
        ViewBag.Title = "补货规则";
        break;
    case "7":
        ViewBag.Title = "批次规则";
        break;
}

@using (Html.BeginForm("SaveModel", "SystemSet"))
{
<div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID)
    @Html.HiddenFor(model => model.RuleType)
    <table style="width:100%;margin:auto;" class="table table-bordered table-striped ">
        <tr>
            <td style="width:50%">
                <div class="form-group">
                    @Html.LabelFor(model => model.MaterialClassName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("MaterialClassCode", Commom.GetList("cbxMaterialClass") as IEnumerable<SelectListItem>, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MaterialClassCode, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.PickRuleName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @switch (Model.RuleType.ToString())
                        {
                            case "1":
                                @Html.DropDownList("PickRuleCode", Commom.GetList("cbxRuleSplit") as IEnumerable<SelectListItem>, new { htmlAttributes = new { @class = "form-control" } })
                                break;
                            case "2":
                                @Html.DropDownList("PickRuleCode", Commom.GetList("cbxPickRule") as IEnumerable<SelectListItem>, new { htmlAttributes = new { @class = "form-control" } })
                                break;
                            case "3":
                                @Html.DropDownList("PickRuleCode", Commom.GetList("cbxRuleSlot") as IEnumerable<SelectListItem>, new { htmlAttributes = new { @class = "form-control" } })
                                break;
                            case "5":
                                @Html.DropDownList("PickRuleCode", Commom.GetList("cbxRuleRec") as IEnumerable<SelectListItem>, new { htmlAttributes = new { @class = "form-control" } })
                                break;
                            case "6":
                                @Html.DropDownList("PickRuleCode", Commom.GetList("cbxRuleAddStock") as IEnumerable<SelectListItem>, new { htmlAttributes = new { @class = "form-control" } })
                                break;
                            case "7":
                                @Html.DropDownList("PickRuleCode", Commom.GetList("cbxRuleBatch") as IEnumerable<SelectListItem>, new { htmlAttributes = new { @class = "form-control" } })
                                break;
                        }


                        @Html.ValidationMessageFor(model => model.PickRuleCode, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.StrStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("Status", Commom.GetList("cbxWarehouseStatus") as IEnumerable<SelectListItem>, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10" style="width:50%">
                        @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
                    </div>
                </div>
            </td>
        </tr>
    </table>

    <div class="form-group  col-md-10" style="padding-top:35px;">
        <div class="col-md-offset-1 col-md-10">
            <input id="form1" type="submit" value="提 交" class="btn btn-primary pull-left" style="width:100px" />
        </div>
    </div>
</div>
}
    @*<script type="text/javascript">
        function add() {
            $.post("/Systemset/Add", {}, function () {


            })
        }*@







    @{Html.RenderAction("ErrorMsg", strMsg);}